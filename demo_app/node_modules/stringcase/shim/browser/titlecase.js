/**
 * Convert string into sentence case.
 * First letter capped and each punctuations is capitalcase and joined with space.
 * @memberof module:stringcase/lib
 * @function titlecase
 * @param {string} str - String to convert.
 * @returns {string} Title cased string.
 */
'use strict';

var snakecase = require('./snakecase');

var lowercase = require('./lowercase');

var trimcase = require('./trimcase');

var capitalcase = require('./capitalcase');

var LOWERCASE_WORDS = 'a,the,and,or,not,but,for,of'.split(',');
/** @lends titlecase*/

function titlecase(str) {
  return snakecase(str).split(/_/g).map(trimcase).map(function (word) {
    var lower = !!~LOWERCASE_WORDS.indexOf(word);

    if (lower) {
      return lowercase(word);
    } else {
      return capitalcase(word);
    }
  }).join(' ');
}

module.exports = titlecase;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRpdGxlY2FzZS5qcyJdLCJuYW1lcyI6WyJzbmFrZWNhc2UiLCJyZXF1aXJlIiwibG93ZXJjYXNlIiwidHJpbWNhc2UiLCJjYXBpdGFsY2FzZSIsIkxPV0VSQ0FTRV9XT1JEUyIsInNwbGl0IiwidGl0bGVjYXNlIiwic3RyIiwibWFwIiwid29yZCIsImxvd2VyIiwiaW5kZXhPZiIsImpvaW4iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFTQTs7QUFFQSxJQUFNQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxhQUFELENBQXpCOztBQUNBLElBQU1DLFNBQVMsR0FBR0QsT0FBTyxDQUFDLGFBQUQsQ0FBekI7O0FBQ0EsSUFBTUUsUUFBUSxHQUFHRixPQUFPLENBQUMsWUFBRCxDQUF4Qjs7QUFDQSxJQUFNRyxXQUFXLEdBQUdILE9BQU8sQ0FBQyxlQUFELENBQTNCOztBQUVBLElBQU1JLGVBQWUsR0FBRyw4QkFBOEJDLEtBQTlCLENBQW9DLEdBQXBDLENBQXhCO0FBRUE7O0FBQ0EsU0FBU0MsU0FBVCxDQUFvQkMsR0FBcEIsRUFBeUI7QUFDdkIsU0FBT1IsU0FBUyxDQUFDUSxHQUFELENBQVQsQ0FBZUYsS0FBZixDQUFxQixJQUFyQixFQUNKRyxHQURJLENBQ0FOLFFBREEsRUFFSk0sR0FGSSxDQUVBLFVBQVVDLElBQVYsRUFBZ0I7QUFDbkIsUUFBSUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDTixlQUFlLENBQUNPLE9BQWhCLENBQXdCRixJQUF4QixDQUFmOztBQUNBLFFBQUlDLEtBQUosRUFBVztBQUNULGFBQU9ULFNBQVMsQ0FBQ1EsSUFBRCxDQUFoQjtBQUNELEtBRkQsTUFFTztBQUNMLGFBQU9OLFdBQVcsQ0FBQ00sSUFBRCxDQUFsQjtBQUNEO0FBQ0YsR0FUSSxFQVNGRyxJQVRFLENBU0csR0FUSCxDQUFQO0FBVUQ7O0FBRURDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlIsU0FBakIiLCJzb3VyY2VSb290IjoiLi4vLi4vbGliIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb252ZXJ0IHN0cmluZyBpbnRvIHNlbnRlbmNlIGNhc2UuXG4gKiBGaXJzdCBsZXR0ZXIgY2FwcGVkIGFuZCBlYWNoIHB1bmN0dWF0aW9ucyBpcyBjYXBpdGFsY2FzZSBhbmQgam9pbmVkIHdpdGggc3BhY2UuXG4gKiBAbWVtYmVyb2YgbW9kdWxlOnN0cmluZ2Nhc2UvbGliXG4gKiBAZnVuY3Rpb24gdGl0bGVjYXNlXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyIC0gU3RyaW5nIHRvIGNvbnZlcnQuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaXRsZSBjYXNlZCBzdHJpbmcuXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbmNvbnN0IHNuYWtlY2FzZSA9IHJlcXVpcmUoJy4vc25ha2VjYXNlJylcbmNvbnN0IGxvd2VyY2FzZSA9IHJlcXVpcmUoJy4vbG93ZXJjYXNlJylcbmNvbnN0IHRyaW1jYXNlID0gcmVxdWlyZSgnLi90cmltY2FzZScpXG5jb25zdCBjYXBpdGFsY2FzZSA9IHJlcXVpcmUoJy4vY2FwaXRhbGNhc2UnKVxuXG5jb25zdCBMT1dFUkNBU0VfV09SRFMgPSAnYSx0aGUsYW5kLG9yLG5vdCxidXQsZm9yLG9mJy5zcGxpdCgnLCcpXG5cbi8qKiBAbGVuZHMgdGl0bGVjYXNlKi9cbmZ1bmN0aW9uIHRpdGxlY2FzZSAoc3RyKSB7XG4gIHJldHVybiBzbmFrZWNhc2Uoc3RyKS5zcGxpdCgvXy9nKVxuICAgIC5tYXAodHJpbWNhc2UpXG4gICAgLm1hcChmdW5jdGlvbiAod29yZCkge1xuICAgICAgdmFyIGxvd2VyID0gISF+TE9XRVJDQVNFX1dPUkRTLmluZGV4T2Yod29yZClcbiAgICAgIGlmIChsb3dlcikge1xuICAgICAgICByZXR1cm4gbG93ZXJjYXNlKHdvcmQpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gY2FwaXRhbGNhc2Uod29yZClcbiAgICAgIH1cbiAgICB9KS5qb2luKCcgJylcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB0aXRsZWNhc2U7XG5cblxuIl19